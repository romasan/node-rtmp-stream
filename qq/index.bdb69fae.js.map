{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,+BCAAD,EAAAC,EAAA,S,gEAYO,MAAMC,EAAgB,KAC5B,MAAOC,EAASC,IAAc,EAAAC,EAAAC,UAAc,CAAC,IACtCC,EAAOC,IAAY,EAAAH,EAAAC,UAAS,IAE7BG,EAAWC,EAAAC,EAAA,IAEjB,EAAAN,EAAAO,YAAU,KACT,IAAKL,GAASJ,GAASU,QAAS,CAC/B,MAAMC,EAAa,UAAWX,GAASU,QAAU,SAAWE,OAAOC,KAAKb,GAASU,UAAY,IAAII,MACjGT,EAASM,EACV,IACE,CAACP,EAAOJ,IAaX,OANA,EAAAE,EAAAO,YAAU,KACTM,EAAAC,QAAGC,GAAG,WAAYC,IACjBjB,GAAW,CAACkB,EAAQ,CAAC,KAAO,IAAKA,KAAUD,KAAQ,GACpD,GACE,KAGF,EAAArB,EAAAuB,MAAC,OAAIC,UAAWf,EAAW,SAAW,G,WACrC,EAAAT,EAAAyB,KAACC,EAAAC,OAAK,CAAEC,KAAMF,EAAAG,MAAMC,OAAQN,UCrCJ,gBDqCyBjB,MAAOJ,GAASU,UAAUN,GAAQwB,QAb3D,CAACC,EAAWC,KAErCC,QAAQC,IAAI,OAAQ,C,EAAEH,E,EAAGC,E,MAAG1B,GAAM,E,UAYhC,EAAAP,EAAAyB,KAAC,OAAID,UCpCkB,gB,SDoCG,UAE1BrB,GAASU,UACT,EAAAb,EAAAyB,KAACW,EAAAC,QAAM,CAAE9B,MAAOA,EAAO+B,OAAQnC,GAASU,QAASL,SAAUA,M,iCDpC/D,EAAA+B,EAAAC,SAAQC,MAAMC,IACA,OAATA,IAMJ,EAAAC,EAAAC,YAEA,EAAAC,EAAAC,YAAWC,SAASC,eAAe,SAAwBC,QAAO,EAAAjD,EAAAyB,KAACvB,EAAE,MAPpE6C,SAASG,SAASC,KAAO,GAO2C,IACnEC,OAAM","sources":["src/containers/Admin/index.tsx","src/containers/Admin/App.tsx","src/containers/Admin/App.module.scss"],"sourcesContent":["import React from 'react'\nimport { createRoot } from 'react-dom/client';\nimport { App } from \"./App\";\nimport { start } from '../../lib/api';\nimport { connect } from '../../lib/ws';\n\nstart().then((text) => {\n\tif (text !== 'qq') {\n\t\tdocument.location.href = '/';\n\n\t\treturn;\n\t}\n\n\tconnect();\n\n\tcreateRoot(document.getElementById('root') as HTMLElement).render(<App />);\n}).catch(() => {});\n","import React, { useState, useEffect } from 'react';\n\nimport mobile from 'is-mobile';\n\nimport { Canvas, EMode } from '../../components/Canvas';\nimport { Palette } from '../../components/Palette';\n\n// import { addPix } from './lib/api';\nimport ee from '../../lib/ee';\n\nimport * as s from './App.module.scss';\n\nexport const App: React.FC = () => {\n\tconst [wsStore, setWsStore] = useState<any>({});\n\tconst [color, setColor] = useState('');\n\n\tconst isMobile = mobile();\n\n\tuseEffect(() => {\n\t\tif (!color && wsStore?.palette) {\n\t\t\tconst firstColor = 'black' in wsStore?.palette ? 'black' : (Object.keys(wsStore?.palette) || []).pop();\n\t\t\tsetColor(firstColor as string);\n\t\t}\n\t}, [color, wsStore]);\n\n\tconst handleCanvasClick = (x: number, y: number) => {\n\t\t// addPix({ x, y, color });\n\t\tconsole.log('====', { x, y, color });\n\t}\n\n\tuseEffect(() => {\n\t\tee.on('ws:init', (payload: any) => {\n\t\t\tsetWsStore((store = {}) => ({ ...store, ...payload }));\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div className={isMobile ? 'mobile' : ''}>\n\t\t\t<Canvas mode={EMode.SELECT} className={s.canvas} color={wsStore?.palette?.[color]} onClick={handleCanvasClick}>\n\t\t\t\t<div className={s.layout}>FOO</div>\n\t\t\t</Canvas>\n\t\t\t{wsStore?.palette && (\n\t\t\t\t<Palette color={color} colors={wsStore?.palette} setColor={setColor} />\n\t\t\t)}\n\t\t</div>\n\t)\n}\n","@import \"../../styles/mixins\";\n\n.joinModalContent {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\theight: 100%;\n\tgap: 20px;\n\tfont-size: 20px;\n\tfont-weight: bold;\n}\n\n.command {\n\tbackground: #9594c0;\n\tpadding: 3px;\n\tborder-radius: 3px;\n\tcursor: pointer;\n}\n\n.input {\n\tborder-style: solid;\n\tborder-width: 2px;\n\tborder-right-color: #b6b5eb;\n\tborder-bottom-color: #b6b5eb;\n\tborder-top-color: #2d2d3a;\n\tborder-left-color: #2d2d3a;\n\tbackground: #bbbaf1;\n\tfont-family: 'Custom Font', monospace;\n\tfont-size: 20px;\n\tfont-weight: bold;\n\tpadding: 10px;\n\twidth: 400px;\n\ttext-align: center;\n\tborder-radius: 5px;\n\n\t&:focus{\n\t\toutline: none;\n\t\t&::placeholder {\n\t\t\tcolor: transparent;\n\t\t}\n\t}\n\n\t&::placeholder {\n\t\ttext-transform: uppercase;\n\t}\n}\n\n.button {\n\t@include buttonLike();\n\n\tfont-family: 'Custom Font', monospace;\n\tfont-size: 20px;\n\tfont-weight: bold;\n}\n\n.canvas.canvas {\n\tbackground-image: unset;\n\tbackground-color: #3c3c3c;\n}\n\n.layout {\n\tposition: absolute;\n\ttop: 0px;\n\tleft: 0px;\n\tbackground: red;\n\twidth: 100%;\n\theight: 100%;\n\topacity: 0.5;\n}\n"],"names":["$ayMG0","parcelRequire","$b5cb6d501281a70a$export$86fbec116b87613f","wsStore","setWsStore","$acw62","useState","color","setColor","isMobile","$parcel$interopDefault","$fAX6M","useEffect","palette","firstColor","Object","keys","pop","$im20c","default","on","payload","store","jsxs","className","jsx","$iWcyK","Canvas","mode","EMode","SELECT","onClick","x","y","console","log","$7SRiy","Palette","colors","$5LNJK","start","then","text","$ksj8G","connect","$aRPiL","createRoot","document","getElementById","render","location","href","catch"],"version":3,"file":"index.bdb69fae.js.map"}